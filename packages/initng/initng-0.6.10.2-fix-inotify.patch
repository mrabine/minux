diff -rupN /tmp/initng-0.6.10.2/plugins/fmon/initng_fmon.c ./plugins/fmon/initng_fmon.c
--- /tmp/initng-0.6.10.2/plugins/fmon/initng_fmon.c	2007-02-20 14:26:38.000000000 +0100
+++ ./plugins/fmon/initng_fmon.c	2015-08-20 14:42:24.382550516 +0200
@@ -56,8 +56,7 @@
 #include <initng-paths.h>
 
 /* the standard intotify headers */
-#include "inotify.h"
-#include "inotify-syscalls.h"
+#include <sys/inotify.h>
 
 INITNG_PLUGIN_MACRO;
 
diff -rupN /tmp/initng-0.6.10.2/plugins/fmon/inotify.h ./plugins/fmon/inotify.h
--- /tmp/initng-0.6.10.2/plugins/fmon/inotify.h	2006-05-18 15:49:04.000000000 +0200
+++ ./plugins/fmon/inotify.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,126 +0,0 @@
-/*
- * Inode based directory notification for Linux
- *
- * Copyright (C) 2005 John McCutchan
- */
-
-#ifndef _LINUX_INOTIFY_H
-#define _LINUX_INOTIFY_H
-
-#include <linux/types.h>
-
-/*
- * struct inotify_event - structure read from the inotify device for each event
- *
- * When you are watching a directory, you will receive the filename for events
- * such as IN_CREATE, IN_DELETE, IN_OPEN, IN_CLOSE, ..., relative to the wd.
- */
-struct inotify_event
-{
-	__s32 wd;					/* watch descriptor */
-	__u32 mask;					/* watch mask */
-	__u32 cookie;				/* cookie to synchronize two events */
-	__u32 len;					/* length (including nulls) of name */
-	char name[0];				/* stub for possible name */
-};
-
-/*
- * struct inotify_watch_request - represents a watch request
- *
- * Pass to the inotify device via the INOTIFY_WATCH ioctl
- */
-struct inotify_watch_request
-{
-	int fd;						/* fd of filename to watch */
-	__u32 mask;					/* event mask */
-};
-
-/* the following are legal, implemented events that user-space can watch for */
-#define IN_ACCESS		0x00000001			/* File was accessed */
-#define IN_MODIFY		0x00000002			/* File was modified */
-#define IN_ATTRIB		0x00000004			/* Metadata changed */
-#define IN_CLOSE_WRITE		0x00000008		/* Writtable file was closed */
-#define IN_CLOSE_NOWRITE	0x00000010		/* Unwrittable file closed */
-#define IN_OPEN			0x00000020			/* File was opened */
-#define IN_MOVED_FROM		0x00000040		/* File was moved from X */
-#define IN_MOVED_TO		0x00000080			/* File was moved to Y */
-#define IN_CREATE		0x00000100			/* Subfile was created */
-#define IN_DELETE		0x00000200			/* Subfile was deleted */
-#define IN_DELETE_SELF		0x00000400		/* Self was deleted */
-
-/* the following are legal events.  they are sent as needed to any watch */
-#define IN_UNMOUNT		0x00002000			/* Backing fs was unmounted */
-#define IN_Q_OVERFLOW		0x00004000		/* Event queued overflowed */
-#define IN_IGNORED		0x00008000			/* File was ignored */
-
-/* helper events */
-#define IN_CLOSE		(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)	/* close */
-#define IN_MOVE			(IN_MOVED_FROM | IN_MOVED_TO)	/* moves */
-
-/* special flags */
-#define IN_ISDIR		0x40000000			/* event occurred against dir */
-#define IN_ONESHOT		0x80000000			/* only send event once */
-
-/*
- * All of the events - we build the list by hand so that we can add flags in
- * the future and not break backward compatibility.  Apps will get only the
- * events that they originally wanted.  Be sure to add new events here!
- */
-#define IN_ALL_EVENTS	(IN_ACCESS | IN_MODIFY | IN_ATTRIB | IN_CLOSE_WRITE | \
-			 IN_CLOSE_NOWRITE | IN_OPEN | IN_MOVED_FROM | \
-			 IN_MOVED_TO | IN_DELETE | IN_CREATE | IN_DELETE_SELF)
-
-#define INOTIFY_IOCTL_MAGIC	'Q'
-#define INOTIFY_IOCTL_MAXNR	2
-
-#define INOTIFY_WATCH  		_IOR(INOTIFY_IOCTL_MAGIC, 1, struct inotify_watch_request)
-#define INOTIFY_IGNORE 		_IOR(INOTIFY_IOCTL_MAGIC, 2, int)
-
-#ifdef __KERNEL__
-
-#include <linux/dcache.h>
-#include <linux/fs.h>
-#include <linux/config.h>
-
-#ifdef CONFIG_INOTIFY
-
-extern void inotify_inode_queue_event(struct inode *, __u32, __u32,
-									  const char *);
-extern void inotify_dentry_parent_queue_event(struct dentry *, __u32, __u32,
-											  const char *);
-extern void inotify_unmount_inodes(struct list_head *);
-extern void inotify_inode_is_dead(struct inode *);
-extern u32 inotify_get_cookie(void);
-
-#else
-
-static inline void inotify_inode_queue_event(struct inode *inode,
-											 __u32 mask, __u32 cookie,
-											 const char *filename)
-{
-}
-
-static inline void inotify_dentry_parent_queue_event(struct dentry *dentry,
-													 __u32 mask, __u32 cookie,
-													 const char *filename)
-{
-}
-
-static inline void inotify_unmount_inodes(struct list_head *list)
-{
-}
-
-static inline void inotify_inode_is_dead(struct inode *inode)
-{
-}
-
-static inline u32 inotify_get_cookie(void)
-{
-	return 0;
-}
-
-#endif /* CONFIG_INOTIFY */
-
-#endif /* __KERNEL __ */
-
-#endif /* _LINUX_INOTIFY_H */
diff -rupN /tmp/initng-0.6.10.2/plugins/fmon/inotify-syscalls.h ./plugins/fmon/inotify-syscalls.h
--- /tmp/initng-0.6.10.2/plugins/fmon/inotify-syscalls.h	2007-02-01 14:14:54.000000000 +0100
+++ ./plugins/fmon/inotify-syscalls.h	1970-01-01 01:00:00.000000000 +0100
@@ -1,65 +0,0 @@
-#ifndef _LINUX_INOTIFY_SYSCALLS_H
-#define _LINUX_INOTIFY_SYSCALLS_H
-
-#include <sys/syscall.h>
-
-#if defined(__i386__)
-# define __NR_inotify_init	291
-# define __NR_inotify_add_watch	292
-# define __NR_inotify_rm_watch	293
-#elif defined(__x86_64__)
-# define __NR_inotify_init	253
-# define __NR_inotify_add_watch	254
-# define __NR_inotify_rm_watch	255
-#elif defined(__ppc__) || defined(__powerpc__) || defined(__powerpc64__)
-# define __NR_inotify_init	275
-# define __NR_inotify_add_watch	276
-# define __NR_inotify_rm_watch	277
-#elif defined (__ia64__)
-# define __NR_inotify_init	1277
-# define __NR_inotify_add_watch	1278
-# define __NR_inotify_rm_watch	1279
-#elif defined (__arm__)
-# define __NR_inotify_init	316
-# define __NR_inotify_add_watch	317
-# define __NR_inotify_rm_watch	318
-#elif defined (__s390__)
-# define __NR_inotify_init	284
-# define __NR_inotify_add_watch	285
-# define __NR_inotify_rm_watch	286
-#elif defined (__alpha__)
-# define __NR_inotify_init	444
-# define __NR_inotify_add_watch	445
-# define __NR_inotify_rm_watch	446
-#elif defined (__sparc__) || defined (__sparc64__)
-# define __NR_inotify_init	151
-# define __NR_inotify_add_watch	152
-# define __NR_inotify_rm_watch	156
-#elif defined (__sh__)
-# define __NR_inotify_init	290
-# define __NR_inotify_add_watch	291
-# define __NR_inotify_rm_watch	292
-#elif defined (__hppa__) || defined (__hppa64__)
-# define __NR_inotify_init	269
-# define __NR_inotify_add_watch	270
-# define __NR_inotify_rm_watch	271
-#else
-# error "Unsupported architecture!"
-#endif
-
-static inline int inotify_init(void)
-{
-	return syscall(__NR_inotify_init);
-}
-
-static inline int inotify_add_watch(int fd, const char *name, __u32 mask)
-{
-	return syscall(__NR_inotify_add_watch, fd, name, mask);
-}
-
-static inline int inotify_rm_watch(int fd, __u32 wd)
-{
-	return syscall(__NR_inotify_rm_watch, fd, wd);
-}
-
-#endif /* _LINUX_INOTIFY_SYSCALLS_H */
